{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya\\\\Desktop\\\\nullclass_practice\\\\twiller-twitterclone\\\\twiller\\\\src\\\\Pages\\\\Feed\\\\Tweetbox\\\\Tweetbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport \"./Tweetbox.css\";\nimport { Avatar, Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport AddPhotoAlternateOutlinedIcon from \"@mui/icons-material/AddPhotoAlternateOutlined\";\nimport MicIcon from \"@mui/icons-material/Mic\"; // For audio icon\nimport axios from \"axios\";\nimport { useUserAuth } from \"../../../context/UserAuthContext\";\nimport useLoggedinuser from \"../../../hooks/useLoggedinuser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tweetbox = () => {\n  _s();\n  var _loggedinsuer$, _loggedinsuer$2;\n  const [post, setpost] = useState(\"\");\n  const [imageurl, setimageurl] = useState(\"\");\n  const [isloading, setisloading] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const [audioBlob, setAudioBlob] = useState(null); // Store recorded audio blob\n  const [isRecording, setIsRecording] = useState(false); // Track recording state\n  const [otpVerified, setOtpVerified] = useState(false); // Track OTP verification\n  const [openPopup, setOpenPopup] = useState(false); // Control audio popup\n  const mediaRecorderRef = useRef(null); // Reference for MediaRecorder\n  const chunksRef = useRef([]); // Store recorded audio chunks\n  const {\n    user\n  } = useUserAuth();\n  const [loggedinsuer] = useLoggedinuser();\n  const email = user === null || user === void 0 ? void 0 : user.email;\n  const userprofilepic = (_loggedinsuer$ = loggedinsuer[0]) !== null && _loggedinsuer$ !== void 0 && _loggedinsuer$.profileImage ? loggedinsuer[0].profileImage : user && user.photoURL;\n  const handleuploadimage = e => {\n    setisloading(true);\n    const image = e.target.files[0];\n    //console.log(image)\n    const formData = new FormData();\n    formData.set(\"image\", image);\n    axios.post(\"https://api.imgbb.com/1/upload?key=131172eab64930e16173f6f8467ba9a6 \", formData).then(res => {\n      setimageurl(res.data.data.display_url);\n      console.log(res.data.data.display_url);\n      setisloading(false);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      chunksRef.current = [];\n      mediaRecorderRef.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(chunksRef.current, {\n          type: \"audio/wav\"\n        });\n        setAudioBlob(audioBlob);\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing microphone:\", error);\n    }\n  };\n\n  // Function to stop recording audio\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n    }\n  };\n\n  // Function to validate audio size and duration\n  const validateAudio = blob => {\n    const fileSizeInMB = blob.size / (1024 * 1024); // Convert bytes to MB\n    const durationInSeconds = Math.floor(blob.duration); // Duration in seconds\n\n    return fileSizeInMB <= 100 && durationInSeconds <= 300; // 100MB and 5 minutes\n  };\n\n  // Function to check if current time is within 2 PM to 7 PM IST\n  const isWithinTimeRange = () => {\n    const now = new Date();\n    const istOffset = 330; // IST offset in minutes\n    const istTime = new Date(now.getTime() + istOffset * 60 * 1000);\n    const hours = istTime.getUTCHours();\n    return hours >= 14 && hours < 19; // 2 PM to 7 PM IST\n  };\n\n  // Function to send OTP to email\n  const sendOtp = async () => {\n    try {\n      await axios.post(\"https://twiller-twitterclone-1-j9kj.onrender.com/send-otp\", {\n        email\n      });\n      alert(\"OTP sent to your email. Please verify.\");\n    } catch (error) {\n      console.error(\"Error sending OTP:\", error);\n    }\n  };\n\n  // Function to verify OTP\n  const verifyOtp = async otp => {\n    try {\n      const response = await axios.post(\"https://twiller-twitterclone-1-j9kj.onrender.com/verify-otp\", {\n        email,\n        otp\n      });\n      if (response.data.success) {\n        setOtpVerified(true);\n        alert(\"OTP verified successfully!\");\n      } else {\n        alert(\"Invalid OTP. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error verifying OTP:\", error);\n    }\n  };\n\n  // Function to handle tweet submission\n  const handletweet = e => {\n    e.preventDefault();\n\n    // If audio is present, ensure OTP is verified\n    if (audioBlob && !otpVerified) {\n      alert(\"Please verify OTP before posting.\");\n      return;\n    }\n\n    // Validate audio constraints if audio is present\n    if (audioBlob && !validateAudio(audioBlob)) {\n      alert(\"Audio must be less than 5 minutes and 100MB.\");\n      return;\n    }\n\n    // Validate time range if audio is present\n    if (audioBlob && !isWithinTimeRange()) {\n      alert(\"You can only upload audio between 2 PM and 7 PM IST.\");\n      return;\n    }\n\n    // Prepare tweet data\n    const formData = new FormData();\n    if (audioBlob) {\n      formData.append(\"audio\", audioBlob);\n    }\n\n    // Upload audio if present\n    if (audioBlob) {\n      axios.post(\"https://twiller-twitterclone-1-j9kj.onrender.com/upload-audio\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        const audioUrl = res.data.url;\n        const userPost = {\n          profilephoto: userprofilepic,\n          post: post,\n          photo: imageurl,\n          audio: audioUrl || null,\n          username: username,\n          name: name,\n          email: email\n        };\n\n        // Post the tweet\n        fetch(\"https://twiller-twitterclone-1-j9kj.onrender.com/post\", {\n          method: \"POST\",\n          headers: {\n            \"content-type\": \"application/json\"\n          },\n          body: JSON.stringify(userPost)\n        }).then(res => res.json()).then(data => {\n          console.log(data);\n          setpost(\"\");\n          setimageurl(\"\");\n          setAudioBlob(null);\n          setOpenPopup(false); // Close popup after successful post\n          setOtpVerified(false); // Reset OTP verification\n        });\n      }).catch(error => {\n        console.error(\"Error uploading audio:\", error);\n      });\n    } else {\n      // Post without audio\n      const userPost = {\n        profilephoto: userprofilepic,\n        post: post,\n        photo: imageurl,\n        audio: null,\n        username: username,\n        name: name,\n        email: email\n      };\n      fetch(\"https://twiller-twitterclone-1-j9kj.onrender.com/post\", {\n        method: \"POST\",\n        headers: {\n          \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(userPost)\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        setpost(\"\");\n        setimageurl(\"\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handletweet,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox__input\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: (_loggedinsuer$2 = loggedinsuer[0]) !== null && _loggedinsuer$2 !== void 0 && _loggedinsuer$2.profileImage ? loggedinsuer[0].profileImage : user && user.photoURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"What's happening?\",\n          onChange: e => setpost(e.target.value),\n          value: post,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageIcon_tweetButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"imageIcon\",\n          children: isloading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Uploading Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: imageurl ? \"Image Uploaded\" : /*#__PURE__*/_jsxDEV(AddPhotoAlternateOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 81\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"image\",\n          className: \"imageInput\",\n          onChange: handleuploadimage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenPopup(true),\n          children: /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"tweetBox__tweetButton\",\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openPopup,\n      onClose: () => setOpenPopup(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Record Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: startRecording,\n          disabled: isRecording,\n          children: isRecording ? \"Recording...\" : \"Start Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: stopRecording,\n          disabled: !isRecording,\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Audio Recorded Successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: sendOtp,\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => verifyOtp(document.querySelector(\"input\").value),\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenPopup(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          form: \"tweetForm\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 9\n  }, this);\n};\n_s(Tweetbox, \"mzN7VGVbW9y5QsJEDO3V+Le6UPw=\", false, function () {\n  return [useUserAuth, useLoggedinuser];\n});\n_c = Tweetbox;\nexport default Tweetbox;\nvar _c;\n$RefreshReg$(_c, \"Tweetbox\");","map":{"version":3,"names":["React","useState","useRef","Avatar","Button","Dialog","DialogTitle","DialogContent","DialogActions","AddPhotoAlternateOutlinedIcon","MicIcon","axios","useUserAuth","useLoggedinuser","jsxDEV","_jsxDEV","Tweetbox","_s","_loggedinsuer$","_loggedinsuer$2","post","setpost","imageurl","setimageurl","isloading","setisloading","name","setname","username","setusername","audioBlob","setAudioBlob","isRecording","setIsRecording","otpVerified","setOtpVerified","openPopup","setOpenPopup","mediaRecorderRef","chunksRef","user","loggedinsuer","email","userprofilepic","profileImage","photoURL","handleuploadimage","e","image","target","files","formData","FormData","set","then","res","data","display_url","console","log","catch","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","size","push","onstop","Blob","type","start","error","stopRecording","state","stop","validateAudio","blob","fileSizeInMB","durationInSeconds","Math","floor","duration","isWithinTimeRange","now","Date","istOffset","istTime","getTime","hours","getUTCHours","sendOtp","alert","verifyOtp","otp","response","success","handletweet","preventDefault","append","headers","audioUrl","url","userPost","profilephoto","photo","fetch","method","body","JSON","stringify","json","className","children","onSubmit","src","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","value","required","htmlFor","id","onClick","open","onClose","disabled","document","querySelector","form","_c","$RefreshReg$"],"sources":["C:/Users/Aditya/Desktop/nullclass_practice/twiller-twitterclone/twiller/src/Pages/Feed/Tweetbox/Tweetbox.js"],"sourcesContent":["import React, { useState,useRef }  from 'react'\r\nimport \"./Tweetbox.css\";\r\nimport { Avatar, Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport AddPhotoAlternateOutlinedIcon from \"@mui/icons-material/AddPhotoAlternateOutlined\";\r\nimport MicIcon from \"@mui/icons-material/Mic\"; // For audio icon\r\nimport axios from \"axios\";\r\nimport { useUserAuth } from \"../../../context/UserAuthContext\";\r\nimport useLoggedinuser from \"../../../hooks/useLoggedinuser\";\r\n\r\nconst Tweetbox=()=>{\r\n    const [post, setpost] = useState(\"\");\r\n    const [imageurl, setimageurl] = useState(\"\");\r\n    const [isloading, setisloading] = useState(false);\r\n    const [name, setname] = useState(\"\");\r\n    const [username, setusername] = useState(\"\");\r\n    const [audioBlob, setAudioBlob] = useState(null); // Store recorded audio blob\r\n  const [isRecording, setIsRecording] = useState(false); // Track recording state\r\n  const [otpVerified, setOtpVerified] = useState(false); // Track OTP verification\r\n  const [openPopup, setOpenPopup] = useState(false); // Control audio popup\r\n  const mediaRecorderRef = useRef(null); // Reference for MediaRecorder\r\n  const chunksRef = useRef([]); // Store recorded audio chunks\r\n    const { user } = useUserAuth();\r\n    const [loggedinsuer] = useLoggedinuser();\r\n    const email = user?.email;\r\n    const userprofilepic = loggedinsuer[0]?.profileImage\r\n      ? loggedinsuer[0].profileImage\r\n      : user && user.photoURL;\r\n\r\n      const handleuploadimage = (e) => {\r\n        setisloading(true);\r\n        const image = e.target.files[0];\r\n        //console.log(image)\r\n        const formData = new FormData();\r\n        formData.set(\"image\", image);\r\n        axios.post(\"https://api.imgbb.com/1/upload?key=131172eab64930e16173f6f8467ba9a6 \", formData)\r\n        .then((res) => {\r\n          setimageurl(res.data.data.display_url);\r\n          console.log(res.data.data.display_url);\r\n          setisloading(false);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n      };\r\n      const startRecording = async () => {\r\n        try {\r\n          const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n          mediaRecorderRef.current = new MediaRecorder(stream);\r\n          chunksRef.current = [];\r\n    \r\n          mediaRecorderRef.current.ondataavailable = (event) => {\r\n            if (event.data.size > 0) {\r\n              chunksRef.current.push(event.data);\r\n            }\r\n          };\r\n    \r\n          mediaRecorderRef.current.onstop = () => {\r\n            const audioBlob = new Blob(chunksRef.current, { type: \"audio/wav\" });\r\n            setAudioBlob(audioBlob);\r\n          };\r\n    \r\n          mediaRecorderRef.current.start();\r\n          setIsRecording(true);\r\n        } catch (error) {\r\n          console.error(\"Error accessing microphone:\", error);\r\n        }\r\n      };\r\n    \r\n      // Function to stop recording audio\r\n      const stopRecording = () => {\r\n        if (mediaRecorderRef.current && mediaRecorderRef.current.state !== \"inactive\") {\r\n          mediaRecorderRef.current.stop();\r\n          setIsRecording(false);\r\n        }\r\n      };\r\n    \r\n      // Function to validate audio size and duration\r\n      const validateAudio = (blob) => {\r\n        const fileSizeInMB = blob.size / (1024 * 1024); // Convert bytes to MB\r\n        const durationInSeconds = Math.floor(blob.duration); // Duration in seconds\r\n    \r\n        return fileSizeInMB <= 100 && durationInSeconds <= 300; // 100MB and 5 minutes\r\n      };\r\n    \r\n      // Function to check if current time is within 2 PM to 7 PM IST\r\n      const isWithinTimeRange = () => {\r\n        const now = new Date();\r\n        const istOffset = 330; // IST offset in minutes\r\n        const istTime = new Date(now.getTime() + istOffset * 60 * 1000);\r\n        const hours = istTime.getUTCHours();\r\n        return hours >= 14 && hours < 19; // 2 PM to 7 PM IST\r\n      };\r\n    \r\n      // Function to send OTP to email\r\n      const sendOtp = async () => {\r\n        try {\r\n          await axios.post(\"https://twiller-twitterclone-1-j9kj.onrender.com/send-otp\", { email });\r\n          alert(\"OTP sent to your email. Please verify.\");\r\n        } catch (error) {\r\n          console.error(\"Error sending OTP:\", error);\r\n        }\r\n      };\r\n    \r\n      // Function to verify OTP\r\n      const verifyOtp = async (otp) => {\r\n        try {\r\n          const response = await axios.post(\"https://twiller-twitterclone-1-j9kj.onrender.com/verify-otp\", { email, otp });\r\n          if (response.data.success) {\r\n            setOtpVerified(true);\r\n            alert(\"OTP verified successfully!\");\r\n          } else {\r\n            alert(\"Invalid OTP. Please try again.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error verifying OTP:\", error);\r\n        }\r\n      };\r\n    \r\n      // Function to handle tweet submission\r\n      const handletweet = (e) => {\r\n        e.preventDefault();\r\n    \r\n        // If audio is present, ensure OTP is verified\r\n        if (audioBlob && !otpVerified) {\r\n          alert(\"Please verify OTP before posting.\");\r\n          return;\r\n        }\r\n    \r\n        // Validate audio constraints if audio is present\r\n        if (audioBlob && !validateAudio(audioBlob)) {\r\n          alert(\"Audio must be less than 5 minutes and 100MB.\");\r\n          return;\r\n        }\r\n    \r\n        // Validate time range if audio is present\r\n        if (audioBlob && !isWithinTimeRange()) {\r\n          alert(\"You can only upload audio between 2 PM and 7 PM IST.\");\r\n          return;\r\n        }\r\n    \r\n        // Prepare tweet data\r\n        const formData = new FormData();\r\n        if (audioBlob) {\r\n          formData.append(\"audio\", audioBlob);\r\n        }\r\n    \r\n        // Upload audio if present\r\n        if (audioBlob) {\r\n          axios\r\n            .post(\"https://twiller-twitterclone-1-j9kj.onrender.com/upload-audio\", formData, {\r\n              headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            })\r\n            .then((res) => {\r\n              const audioUrl = res.data.url;\r\n    \r\n              const userPost = {\r\n                profilephoto: userprofilepic,\r\n                post: post,\r\n                photo: imageurl,\r\n                audio: audioUrl || null,\r\n                username: username,\r\n                name: name,\r\n                email: email,\r\n              };\r\n    \r\n              // Post the tweet\r\n              fetch(\"https://twiller-twitterclone-1-j9kj.onrender.com/post\", {\r\n                method: \"POST\",\r\n                headers: { \"content-type\": \"application/json\" },\r\n                body: JSON.stringify(userPost),\r\n              })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                  console.log(data);\r\n                  setpost(\"\");\r\n                  setimageurl(\"\");\r\n                  setAudioBlob(null);\r\n                  setOpenPopup(false); // Close popup after successful post\r\n                  setOtpVerified(false); // Reset OTP verification\r\n                });\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error uploading audio:\", error);\r\n            });\r\n        } else {\r\n          // Post without audio\r\n          const userPost = {\r\n            profilephoto: userprofilepic,\r\n            post: post,\r\n            photo: imageurl,\r\n            audio: null,\r\n            username: username,\r\n            name: name,\r\n            email: email,\r\n          };\r\n    \r\n          fetch(\"https://twiller-twitterclone-1-j9kj.onrender.com/post\", {\r\n            method: \"POST\",\r\n            headers: { \"content-type\": \"application/json\" },\r\n            body: JSON.stringify(userPost),\r\n          })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n              console.log(data);\r\n              setpost(\"\");\r\n              setimageurl(\"\");\r\n            });\r\n        }\r\n      };\r\n    \r\n    return (\r\n        <div className=\"tweetBox\">\r\n      <form onSubmit={handletweet}>\r\n        <div className=\"tweetBox__input\">\r\n          <Avatar\r\n            src={\r\n              loggedinsuer[0]?.profileImage\r\n                ? loggedinsuer[0].profileImage\r\n                : user && user.photoURL\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"What's happening?\"\r\n            onChange={(e) => setpost(e.target.value)}\r\n            value={post}\r\n            required\r\n          />\r\n          </div>\r\n        <div className=\"imageIcon_tweetButton\">\r\n          <label htmlFor=\"image\" className=\"imageIcon\">\r\n            {\r\n              isloading ?<p>Uploading Image</p>:<p>{imageurl ? \"Image Uploaded\":<AddPhotoAlternateOutlinedIcon />}</p>\r\n            }\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            className=\"imageInput\"\r\n            onChange={handleuploadimage}\r\n          />\r\n\r\n          {/* Audio Icon */}\r\n          <Button onClick={() => setOpenPopup(true)}>\r\n            <MicIcon />\r\n          </Button>\r\n\r\n          <Button className=\"tweetBox__tweetButton\" type=\"submit\">\r\n            Post\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Audio Recording Popup */}\r\n      <Dialog open={openPopup} onClose={() => setOpenPopup(false)}>\r\n        <DialogTitle>Record Audio</DialogTitle>\r\n        <DialogContent>\r\n          <Button onClick={startRecording} disabled={isRecording}>\r\n            {isRecording ? \"Recording...\" : \"Start Recording\"}\r\n          </Button>\r\n          <Button onClick={stopRecording} disabled={!isRecording}>\r\n            Stop Recording\r\n          </Button>\r\n          {audioBlob && <p>Audio Recorded Successfully!</p>}\r\n          <Button onClick={sendOtp}>Send OTP</Button>\r\n          <input type=\"text\" placeholder=\"Enter OTP\" />\r\n          <Button onClick={() => verifyOtp(document.querySelector(\"input\").value)}>\r\n            Verify OTP\r\n          </Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setOpenPopup(false)}>Cancel</Button>\r\n          <Button type=\"submit\" form=\"tweetForm\">\r\n            Post\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    );\r\n};\r\nexport default Tweetbox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}