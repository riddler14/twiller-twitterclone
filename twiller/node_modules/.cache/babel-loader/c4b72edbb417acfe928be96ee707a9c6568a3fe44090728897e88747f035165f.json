{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useUserAuth}from\"../context/UserAuthContext\";const useLoggedinuser=()=>{const{user}=useUserAuth();const email=user===null||user===void 0?void 0:user.email;const[loggedinuser,setloggedinuser]=useState({});useEffect(()=>{fetch(`https://twiller-twitterclone-ewhk.onrender.com/loggedinuser?email=${email}`).then(res=>res.json()).then(data=>{//console.log(data)\nsetloggedinuser(data);});},[email,loggedinuser]);return[loggedinuser,setloggedinuser];};export default useLoggedinuser;","map":{"version":3,"names":["React","useEffect","useState","useUserAuth","useLoggedinuser","user","email","loggedinuser","setloggedinuser","fetch","then","res","json","data"],"sources":["C:/Users/Aditya/Desktop/nullclass_practice/twiller-twitterclone/twiller/src/hooks/useLoggedinuser.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useUserAuth } from \"../context/UserAuthContext\";\nconst useLoggedinuser = () => {\n  const { user } = useUserAuth();\n  const email = user?.email;\n  const [loggedinuser, setloggedinuser] = useState({});\n\n  useEffect(() => {\n    fetch(`https://twiller-twitterclone-ewhk.onrender.com/loggedinuser?email=${email}`)\n      .then((res) => res.json())\n      .then((data) => {\n        //console.log(data)\n        setloggedinuser(data);\n      });\n  }, [email, loggedinuser]);\n  return [loggedinuser, setloggedinuser];\n};\n\nexport default useLoggedinuser;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,4BAA4B,CACxD,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAEC,IAAK,CAAC,CAAGF,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAG,KAAK,CAAGD,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEC,KAAK,CACzB,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAEpDD,SAAS,CAAC,IAAM,CACdQ,KAAK,CAAC,qEAAqEH,KAAK,EAAE,CAAC,CAChFI,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAK,CACd;AACAL,eAAe,CAACK,IAAI,CAAC,CACvB,CAAC,CAAC,CACN,CAAC,CAAE,CAACP,KAAK,CAAEC,YAAY,CAAC,CAAC,CACzB,MAAO,CAACA,YAAY,CAAEC,eAAe,CAAC,CACxC,CAAC,CAED,cAAe,CAAAJ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}